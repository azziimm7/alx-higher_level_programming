===========================
How to use 0-add_integer.py
===========================

This module defines an integer addition funtion `add_integer(a, b=98)`.

Importing the function from the module:
	>>> add_integer = __import__('0-add_integer').add_integer

Adding two integers
	>>> add_integer(1, 2)
	3

Subtrcating two integers
	>>> add_integer(100, -2)
	98

Using the default value of 98 for addition
	>>> add_integer(2)
	100

Adding/subtracting to a float number will cast it to integer
	>>> add_integer(100.3, -2)
	98

Passing None
	>>> add_integer(None)
	Traceback (most recent call last):
  		...
	TypeError: a must be an integer

Adding a number and a string
	>>> add_integer(4, "School")
	Traceback (most recent call last):
  		...
	TypeError: b must be an integer


Adding a tuple
	>>> add_integer((1, 2))
	Traceback (most recent call last):
  		...
	TypeError: a must be an integer

Adding a number and a list
	>>> add_integer(4, [])
	Traceback (most recent call last):
  		...
	TypeError: b must be an integer

Case Overflow:

	>>> add_integer(float('inf'), 0)
	Traceback (most recent call last):
  		...
	OverflowError: cannot convert float infinity to integer

Case Nan:
	>>> add_integer(float('nan'), 0)
	Traceback (most recent call last):
		...
	ValueError: cannot convert float NaN to integer
